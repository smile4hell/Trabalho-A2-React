[{"C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\index.js":"1","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\App.js":"2","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\rotas.js":"3","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\rotasPrivadas.js":"4","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\NaoEncontrado\\index.js":"5","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\Inicio\\index.js":"6","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\Login\\index.js":"7","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\Cartao\\index.js":"8","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\Cabecalho\\index.js":"9","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\Tarefas\\index.js":"10","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\Menu\\index.js":"11","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\MenuInicial\\index.js":"12","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\Copyright\\index.js":"13","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\UsuariosTarefa\\index.js":"14","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\Ajuda\\index.js":"15","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\SAC\\index.js":"16","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\sac\\index.js":"17","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\faq\\index.js":"18"},{"size":199,"mtime":1602084284000,"results":"19","hashOfConfig":"20"},{"size":893,"mtime":1606961128488,"results":"21","hashOfConfig":"20"},{"size":770,"mtime":1606952148186,"results":"22","hashOfConfig":"20"},{"size":372,"mtime":1602084284000,"results":"23","hashOfConfig":"20"},{"size":1292,"mtime":1606957706927,"results":"24","hashOfConfig":"20"},{"size":280,"mtime":1602084284000,"results":"25","hashOfConfig":"20"},{"size":5764,"mtime":1606960966491,"results":"26","hashOfConfig":"20"},{"size":1898,"mtime":1606960755422,"results":"27","hashOfConfig":"20"},{"size":2858,"mtime":1606951031641,"results":"28","hashOfConfig":"20"},{"size":8749,"mtime":1606949662897,"results":"29","hashOfConfig":"20"},{"size":1366,"mtime":1603932136000,"results":"30","hashOfConfig":"31"},{"size":2710,"mtime":1606949832527,"results":"32","hashOfConfig":"20"},{"size":479,"mtime":1606960851479,"results":"33","hashOfConfig":"20"},{"size":9176,"mtime":1606949406129,"results":"34","hashOfConfig":"20"},{"size":1909,"mtime":1606951016648,"results":"35","hashOfConfig":"20"},{"size":1893,"mtime":1606951717683,"results":"36","hashOfConfig":"20"},{"size":1893,"mtime":1606951717683,"results":"37","hashOfConfig":"20"},{"size":1602,"mtime":1606958425696,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1hesct9",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"cwvwnc",{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"41"},"C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\index.js",[],["81","82"],"C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\App.js",[],"C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\rotas.js",[],"C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\rotasPrivadas.js",[],"C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\NaoEncontrado\\index.js",[],"C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\Inicio\\index.js",[],"C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\Login\\index.js",[],"C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\Cartao\\index.js",[],"C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\Cabecalho\\index.js",[],"C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\Tarefas\\index.js",["83"],"//cSpell:Ignore descricao\nimport React, { useState, useEffect } from \"react\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport DeleteIcon from '@material-ui/icons/DeleteForeverTwoTone'\nimport EditIcon from '@material-ui/icons/EditTwoTone'\nimport SaveIcon from '@material-ui/icons/Save'\n\n\n\n\nexport default function Tarefas2() {\n    const [tarefas, setTarefas] = useState([])\n    const valorInicial = { id: '', tipo: '', descricao: '', dataFim: '' }\n    const [tarefa, setTarefa] = useState(valorInicial)\n    const [editando, setEditando] = useState(false)\n\n    useEffect(() => {\n        setTarefas(JSON.parse(localStorage.getItem(\"tarefas\")) || [])\n    }, []);\n\n    useEffect(() => {\n        salvaDados()\n    }, [tarefas]);\n\n\n    const mudaAtributo = event => {\n        const { name, value } = event.target\n        setTarefa({ ...tarefa, [name]: value })\n    }\n    const apagaRegistro = id => {       \n        let index = tarefas.map((tarefa) => tarefa.id).indexOf(id);\n        if (index > -1) {\n            tarefas.splice(index, 1) //o 1o parâmetro é o índice do array e o segundo o número de itens que serão removidos\n            setTarefas(tarefas.filter(tarefa => tarefa.id !== id))\n        }\n    }\n\n\n    function salvaRegistro(event) {\n        event.preventDefault()//Não recarrega o formulário\n        if (editando) {\n            apagaRegistro(tarefa.id)\n        }\n        setTarefa({ id: tarefa.id, tipo: tarefa.tipo, descricao: tarefa.descricao, dataFim: tarefa.dataFim })\n        setTarefas([...tarefas, tarefa])\n        setTarefa(valorInicial) //limpa os campos\n        setEditando(false)\n    }\n\n    function salvaDados() {\n        localStorage.setItem(\"tarefas\", JSON.stringify(tarefas))\n    }\n\n    return (\n        <div>\n            <Grid container spacing={2}>\n                <Grid item xs={12} md={6}>\n                    <form onSubmit={salvaRegistro}>\n                        <Typography\n                            component=\"h1\"\n                            align=\"center\"\n                        >Cadastro de Produção </Typography>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            type=\"number\"\n                            id=\"id\"\n                            label=\"Número da Ordem de produção\"\n                            name=\"id\"\n                            autoFocus\n                            value={tarefa.id}\n                            disabled={editando}\n                            onChange={mudaAtributo}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"cliente\"\n                            label=\"Cliente\"\n                            name=\"cliente\"\n                            value={tarefa.cliente}\n                            onChange={mudaAtributo}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"vendedor\"\n                            label=\"Vendedor\"\n                            name=\"vendedor\"\n                            value={tarefa.vendedor}\n                            onChange={mudaAtributo}\n                        />\n                        <FormControl fullWidth={true}>\n                            <InputLabel id=\"tipo\">Peça montada</InputLabel>\n                            <Select\n                                labelId=\"tipo\"\n                                id=\"tipo\"\n                                value={tarefa.tipo}\n                                required\n                                onChange={e => setTarefa({ ...tarefa, tipo: e.target.value })}\n                            >\n                                <MenuItem value=\"Chapa 10x20\">Chapa 10x20</MenuItem>\n                                <MenuItem value=\"Chapa 15x30\">Chapa 15x30</MenuItem>\n                                <MenuItem value=\"Painel 30x30\">Painel 30x30</MenuItem>\n                                <MenuItem value=\"Painel 20x20\">Painel 20x20</MenuItem>\n                                <MenuItem value=\"Caixa 8x12\">Caixa 8x12</MenuItem>\n                                <MenuItem value=\"Caixa 13x15\">Caixa 13x15</MenuItem>\n                                <MenuItem value=\"MoldeA\">Molde A</MenuItem>\n                                <MenuItem value=\"MoldeB\">Molde B</MenuItem>\n                                <MenuItem value=\"MoldeC\">Molde C</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"dataFim\"\n                            label=\"Data finalização\"\n                            name=\"dataFim\"\n                            type=\"date\"\n                            value={tarefa.dataFim}\n                            onChange={mudaAtributo}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            <SaveIcon /> Salvar\n          </Button>\n                    </form>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <TableContainer component={Paper}>\n                        <Table aria-label=\"Relação de Tarefas   \">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>OP</TableCell>\n                                    <TableCell>Peça</TableCell>\n                                    <TableCell>Resultado</TableCell>\n                                    <TableCell align=\"right\">Data entrega</TableCell>\n                                    <TableCell>Opções</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {tarefas.map((t) => (\n                                    <TableRow key={t.id}>\n                                        <TableCell>{t.id}</TableCell>\n                                        <TableCell>{t.tipo}</TableCell>\n                                        <TableCell>{t.descricao}</TableCell>\n                                        <TableCell align=\"right\">{t.dataFim}</TableCell>\n                                        <TableCell>\n                                            <Button startIcon={<DeleteIcon />}\n                                                onClick={() => apagaRegistro(t.id)}\n                                                variant=\"outlined\" color=\"secondary\">Apagar</Button>\n                                            <Button startIcon={<EditIcon />}\n                                                onClick={() => {\n                                                    setTarefa(t)\n                                                    setEditando(true)\n                                                }}\n                                                variant=\"outlined\" color=\"primary\">Editar</Button>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\Menu\\index.js",[],["84","85"],"C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\MenuInicial\\index.js",["86","87"],"//cSpell:Ignore Cabecalho\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport PersonPinIcon from '@material-ui/icons/PersonPin'\nimport HelpIcon from '@material-ui/icons/Help'\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer'\n\nimport Cabecalho from '../Cabecalho'\nimport Tarefas from '../Tarefas'\nimport Tarefas2 from '../Tarefas';\nimport UsuariosTarefas from '../UsuariosTarefa';\nimport Ajuda from '../Ajuda';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    {/* Remover o Typography do Exemplo */}\n                    {children}\n                </Box>\n\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function SimpleTabs() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Cabecalho />\n            <AppBar position=\"static\">\n                <Tabs value={value} onChange={handleChange} centered aria-label=\"Opções do Menu\">\n                    <Tab label=\"Cadastro OP\" icon={<LocalOfferIcon />} {...a11yProps(0)} />\n                    <Tab label=\"Clientes\" icon={<AccessibilityIcon />} {...a11yProps(1)} />\n                    <Tab label=\"Ajuda\" icon={<HelpIcon />} {...a11yProps(2)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n                <Tarefas />\n      </TabPanel>\n            <TabPanel value={value} index={1}>\n                <UsuariosTarefas/>\n      </TabPanel>\n            <TabPanel value={value} index={2}>\n                <Ajuda/>\n      </TabPanel>\n        </div>\n    );\n}\n","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\Copyright\\index.js",[],"C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\UsuariosTarefa\\index.js",["88"],"//cSpell:Ignore descricao\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nimport DeleteIcon from '@material-ui/icons/DeleteForeverTwoTone'\r\nimport EditIcon from '@material-ui/icons/EditTwoTone'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\n\r\n\r\n\r\n\r\nexport default function UsuariosTarefas() {\r\n    const [tarefas, setUsuariosTarefas] = useState([])\r\n    const valorInicial = { id: '', tipo: '', descricao: '', dataFim: '' }\r\n    const [tarefa, setUsuariosTarefa] = useState(valorInicial)\r\n    const [editando, setEditando] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setUsuariosTarefas(JSON.parse(localStorage.getItem(\"tarefas\")) || [])\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        salvaDados()\r\n    }, [tarefas]);\r\n\r\n\r\n    const mudaAtributo = event => {\r\n        const { name, value } = event.target\r\n        setUsuariosTarefa({ ...tarefa, [name]: value })\r\n    }\r\n    const apagaRegistro = id => {       \r\n        let index = tarefas.map((tarefa) => tarefa.id).indexOf(id);\r\n        if (index > -1) {\r\n            tarefas.splice(index, 1) //o 1o parâmetro é o índice do array e o segundo o número de itens que serão removidos\r\n            setUsuariosTarefas(tarefas.filter(tarefa => tarefa.id !== id))\r\n        }\r\n    }\r\n\r\n\r\n    function salvaRegistro(event) {\r\n        event.preventDefault()//Não recarrega o formulário\r\n        if (editando) {\r\n            apagaRegistro(tarefa.id)\r\n        }\r\n        setUsuariosTarefa({ id: tarefa.id, tipo: tarefa.tipo, descricao: tarefa.descricao, dataFim: tarefa.dataFim })\r\n        setUsuariosTarefas([...tarefas, tarefa])\r\n        setUsuariosTarefa(valorInicial) //limpa os campos\r\n        setEditando(false)\r\n    }\r\n\r\n    function salvaDados() {\r\n        localStorage.setItem(\"tarefas\", JSON.stringify(tarefas))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6}>\r\n                    <form onSubmit={salvaRegistro}>\r\n                        <Typography\r\n                            component=\"h1\"\r\n                            align=\"center\"\r\n                        >Cadastro de Produção </Typography>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            id=\"id\"\r\n                            label=\"Número da Ordem de produção\"\r\n                            name=\"id\"\r\n                            autoFocus\r\n                            value={tarefa.id}\r\n                            disabled={editando}\r\n                            onChange={mudaAtributo}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"cliente\"\r\n                            label=\"Cliente\"\r\n                            name=\"cliente\"\r\n                            value={tarefa.cliente}\r\n                            onChange={mudaAtributo}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"vendedor\"\r\n                            label=\"Vendedor\"\r\n                            name=\"vendedor\"\r\n                            value={tarefa.vendedor}\r\n                            onChange={mudaAtributo}\r\n                        />\r\n                        <FormControl fullWidth={true}>\r\n                            <InputLabel id=\"tipo\">Peça montada</InputLabel>\r\n                            <Select\r\n                                labelId=\"tipo\"\r\n                                id=\"tipo\"\r\n                                value={tarefa.tipo}\r\n                                required\r\n                                onChange={e => setUsuariosTarefa({ ...tarefa, tipo: e.target.value })}\r\n                            >\r\n                                <MenuItem value=\"Chapa 10x20\">Chapa 10x20</MenuItem>\r\n                                <MenuItem value=\"Chapa 15x30\">Chapa 15x30</MenuItem>\r\n                                <MenuItem value=\"Painel 30x30\">Painel 30x30</MenuItem>\r\n                                <MenuItem value=\"Painel 20x20\">Painel 20x20</MenuItem>\r\n                                <MenuItem value=\"Caixa 8x12\">Caixa 8x12</MenuItem>\r\n                                <MenuItem value=\"Caixa 13x15\">Caixa 13x15</MenuItem>\r\n                                <MenuItem value=\"MoldeA\">Molde A</MenuItem>\r\n                                <MenuItem value=\"MoldeB\">Molde B</MenuItem>\r\n                                <MenuItem value=\"MoldeC\">Molde C</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"dataFim\"\r\n                            label=\"Data finalização\"\r\n                            name=\"dataFim\"\r\n                            type=\"date\"\r\n                            value={tarefa.dataFim}\r\n                            onChange={mudaAtributo}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            <SaveIcon /> Salvar\r\n          </Button>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"Relação de Tarefas   \">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>OP</TableCell>\r\n                                    <TableCell>Peça</TableCell>\r\n                                    <TableCell>Cliente</TableCell>\r\n                                    <TableCell>Vendedor</TableCell>\r\n                                    <TableCell align=\"right\">Data entrega</TableCell>\r\n                                    <TableCell>Opções</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {tarefas.map((t) => (\r\n                                    <TableRow key={t.id}>\r\n                                        <TableCell>{t.id}</TableCell>\r\n                                        <TableCell>{t.tipo}</TableCell>\r\n                                        <TableCell>{t.cliente}</TableCell>\r\n                                        <TableCell>{t.vendedor}</TableCell>\r\n                                        <TableCell align=\"right\">{t.dataFim}</TableCell>\r\n                                        <TableCell>\r\n                                            <Button startIcon={<DeleteIcon />}\r\n                                                onClick={() => apagaRegistro(t.id)}\r\n                                                variant=\"outlined\" color=\"secondary\">Apagar</Button>\r\n                                            <Button startIcon={<EditIcon />}\r\n                                                onClick={() => {\r\n                                                    setUsuariosTarefa(t)\r\n                                                    setEditando(true)\r\n                                                }}\r\n                                                variant=\"outlined\" color=\"primary\">Editar</Button>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}","C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\Ajuda\\index.js",[],"C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\SAC\\index.js",[],"C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\sac\\index.js",[],"C:\\Users\\T-Gamer\\Desktop\\Trabalho site\\sitetrabalho\\src\\pages\\faq\\index.js",["89"],"// cSpell:Ignore botao\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Cabecalho from '../Cabecalho'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        margin: theme.spacing(10),\r\n        padding: theme.spacing(5),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    botao: {\r\n        marginTop: theme.spacing(10)\r\n    }\r\n}\r\n)\r\n)\r\n\r\nexport default function NaoEncontrado() {\r\n    const classes = useStyles() //estilos do Material-UI\r\n    return (\r\n        <>\r\n            <Paper elevation={3} className={classes.paper}>\r\n                <Typography variant=\"h4\" color=\"primary\">\r\n                    Duvidas frequentes.\r\n            </Typography>\r\n            <Typography marginTop=\"5\">\r\n                Quem somos ?.....................R: Desde 1997 atuamos no setor de [...]\r\n                 <p>Porque escolher a Alyas ?....R: Estamos a frente do nosso tempo com maquinário de primeira e [...] </p> \r\n                 <p>Nossa politica:..............R: Com o intuito de sempre oferecer o [...]</p>\r\n            </Typography>\r\n                <Button\r\n                    href=\"/\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.botao}\r\n                >\r\n                    Voltar para o início\r\n                </Button>\r\n            </Paper>\r\n        </>\r\n    )\r\n}",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":39,"column":8,"nodeType":"96","endLine":39,"endColumn":17,"suggestions":"97"},{"ruleId":"90","replacedBy":"98"},{"ruleId":"92","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":11,"column":8,"nodeType":"102","messageId":"103","endLine":11,"endColumn":21},{"ruleId":"100","severity":1,"message":"104","line":18,"column":8,"nodeType":"102","messageId":"103","endLine":18,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":39,"column":8,"nodeType":"96","endLine":39,"endColumn":17,"suggestions":"105"},{"ruleId":"100","severity":1,"message":"106","line":7,"column":8,"nodeType":"102","messageId":"103","endLine":7,"endColumn":17},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'salvaDados'. Either include it or remove the dependency array.","ArrayExpression",["109"],["107"],["108"],"no-unused-vars","'PersonPinIcon' is defined but never used.","Identifier","unusedVar","'Tarefas2' is defined but never used.",["110"],"'Cabecalho' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"111","fix":"113"},"Update the dependencies array to be: [salvaDados, tarefas]",{"range":"114","text":"115"},{"range":"116","text":"115"},[1442,1451],"[salvaDados, tarefas]",[1511,1520]]